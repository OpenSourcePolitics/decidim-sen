apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-conf
data:
  default.conf: |
    upstream backend {
      server localhost:3000;
    }

    # inactive means we keep stuff around for 1440m minutes regardless of last access (1 week)
    # levels means it is a 2 deep hierarchy cause we can have lots of files
    # max_size limits the size of the cache
    proxy_cache_path /tmp/nginx_cache inactive=1440m levels=1:2 keys_zone=one:10m max_size=500m;
    log_format json_analytics escape=json '{'
                  '"msec": "$msec", ' # request unixtime in seconds with a milliseconds resolution
                  '"connection": "$connection", ' # connection serial number
                  '"connection_requests": "$connection_requests", ' # number of requests made in connection
                  '"pid": "$pid", ' # process pid
                  '"request_id": "$request_id", ' # the unique request id
                  '"request_length": "$request_length", ' # request length (including headers and body)
                  '"remote_addr": "$remote_addr", ' # client IP
                  '"remote_user": "$remote_user", ' # client HTTP username
                  '"remote_port": "$remote_port", ' # client port
                  '"time_local": "$time_local", '
                  '"time_iso8601": "$time_iso8601", ' # local time in the ISO 8601 standard format
                  '"request": "$request", ' # full path no arguments if the request
                  '"request_uri": "$request_uri", ' # full path and arguments if the request
                  '"args": "$args", ' # args
                  '"status": "$status", ' # response status code
                  '"body_bytes_sent": "$body_bytes_sent", ' # the number of body bytes exclude headers sent to a client
                  '"bytes_sent": "$bytes_sent", ' # the number of bytes sent to a client
                  '"http_referer": "$http_referer", ' # HTTP referer
                  '"http_user_agent": "$http_user_agent", ' # user agent
                  '"http_x_forwarded_for": "$http_x_forwarded_for", ' # http_x_forwarded_for
                  '"http_host": "$http_host", ' # the request Host: header
                  '"http_pragma": "$http_pragma", ' # Pragma header: if set to no-cache, it usually means the user is connected.
                  '"server_name": "$server_name", ' # the name of the vhost serving the request
                  '"request_time": "$request_time", ' # request processing time in seconds with msec resolution
                  '"upstream": "$upstream_addr", ' # upstream backend server for proxied requests
                  '"upstream_connect_time": "$upstream_connect_time", ' # upstream handshake time incl. TLS
                  '"upstream_header_time": "$upstream_header_time", ' # time spent receiving upstream headers
                  '"upstream_response_time": "$upstream_response_time", ' # time spend receiving upstream body
                  '"upstream_response_length": "$upstream_response_length", ' # upstream response length
                  '"upstream_cache_status": "$upstream_cache_status", ' # cache HIT/MISS where applicable
                  '"ssl_protocol": "$ssl_protocol", ' # TLS protocol
                  '"ssl_cipher": "$ssl_cipher", ' # TLS cipher
                  '"scheme": "$scheme", ' # http or https
                  '"request_method": "$request_method", ' # request method
                  '"server_protocol": "$server_protocol", ' # request protocol, like HTTP/1.1 or HTTP/2.0
                  '"pipe": "$pipe", ' # "p" if request was pipelined, "." otherwise
                  '"gzip_ratio": "$gzip_ratio"'
    '}';

    server {
      access_log /var/log/nginx/access.log json_analytics;

      listen 80;

      # gzip
      gzip on;
      gzip_vary on;
      gzip_min_length 1000;
      gzip_comp_level 5;
      gzip_types application/javascript image/svg+xml text/css;
      gzip_proxied any;

      server_tokens off;

      client_max_body_size 10m;

      proxy_set_header Host $http_host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto https;

      proxy_cache one;
      proxy_cache_key "$request_uri";
      proxy_ignore_headers Cache-Control Expires;

      location ~ ^/assets/.*$ {
        expires 1y;
        proxy_cache_valid 200 301 302 1y;
        proxy_pass http://backend;
      }

      location ~ ^/initiatives/.*$ {
        proxy_cache_bypass $http_pragma;
        proxy_no_cache $http_pragma;
        proxy_cache_valid 200 301 302 1m;
        if ($http_pragma = "") {
          expires 1m;
          add_header Cache-Control public,immutable;

        }
        proxy_pass http://backend;
      }

      location / {
        proxy_cache_bypass $http_pragma;
        proxy_no_cache $http_pragma;
        proxy_cache_valid 200 301 302 5m;
        if ($http_pragma = "") {
          expires 5m;
          add_header Cache-Control public,immutable;
        }
        proxy_pass http://backend;
      }
    }